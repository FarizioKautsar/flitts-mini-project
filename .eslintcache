[{"D:\\Project\\Flitts\\mini-project\\src\\index.js":"1","D:\\Project\\Flitts\\mini-project\\src\\reportWebVitals.js":"2","D:\\Project\\Flitts\\mini-project\\src\\App.js":"3","D:\\Project\\Flitts\\mini-project\\src\\container\\MovieList\\index.js":"4","D:\\Project\\Flitts\\mini-project\\src\\component\\Navbar\\index.js":"5","D:\\Project\\Flitts\\mini-project\\src\\component\\Button\\index.js":"6","D:\\Project\\Flitts\\mini-project\\src\\api\\APIConfig.js":"7","D:\\Project\\Flitts\\mini-project\\src\\component\\MovieListItem\\index.js":"8","D:\\Project\\Flitts\\mini-project\\src\\container\\MovieDetail\\index.js":"9","D:\\Project\\Flitts\\mini-project\\src\\component\\Backdrop\\index.js":"10","D:\\Project\\Flitts\\mini-project\\src\\component\\Loader\\index.js":"11","D:\\Project\\Flitts\\mini-project\\src\\component\\Cast\\index.js":"12","D:\\Project\\Flitts\\mini-project\\src\\container\\Cart\\index.js":"13","D:\\Project\\Flitts\\mini-project\\src\\component\\CartItem\\index.js":"14","D:\\Project\\Flitts\\mini-project\\src\\component\\Rating\\index.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":5553,"mtime":1611321888885,"results":"19","hashOfConfig":"17"},{"size":1815,"mtime":1611318300252,"results":"20","hashOfConfig":"17"},{"size":2834,"mtime":1611319162275,"results":"21","hashOfConfig":"17"},{"size":466,"mtime":1611281394402,"results":"22","hashOfConfig":"17"},{"size":509,"mtime":1611216003000,"results":"23","hashOfConfig":"17"},{"size":5134,"mtime":1611319180412,"results":"24","hashOfConfig":"17"},{"size":11986,"mtime":1611319989408,"results":"25","hashOfConfig":"17"},{"size":294,"mtime":1611231312491,"results":"26","hashOfConfig":"17"},{"size":549,"mtime":1611288224403,"results":"27","hashOfConfig":"17"},{"size":926,"mtime":1611287007194,"results":"28","hashOfConfig":"17"},{"size":4654,"mtime":1611321036017,"results":"29","hashOfConfig":"17"},{"size":2386,"mtime":1611320928293,"results":"30","hashOfConfig":"17"},{"size":825,"mtime":1611290848007,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nb4uk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Project\\Flitts\\mini-project\\src\\index.js",[],["66","67"],"D:\\Project\\Flitts\\mini-project\\src\\reportWebVitals.js",[],"D:\\Project\\Flitts\\mini-project\\src\\App.js",[],"D:\\Project\\Flitts\\mini-project\\src\\container\\MovieList\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\Navbar\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\Button\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\api\\APIConfig.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\MovieListItem\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\container\\MovieDetail\\index.js",["68","69"],"import React, { Component } from 'react'\r\nimport classes from './MovieDetail.module.css'\r\nimport MovieListClasses from '../../component/MovieListItem/MovieListItem.module.css'\r\nimport { APIConfig } from '../../api/APIConfig';\r\nimport Cast from '../../component/Cast'\r\nimport Button from '../../component/Button'\r\nimport Loader from '../../component/Loader';\r\nimport Rating from '../../component/Rating';\r\nimport MovieList from '../MovieList';\r\nimport { Helmet } from 'react-helmet'\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\n// Movie detail for a movie\r\n// Can be accessed from MovieList, Cart, or URL\r\nexport default class MovieDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: {},\r\n            casts: [],\r\n            similar: [],\r\n            recommendations: [],\r\n            isLoading: true,\r\n            isLoadingCast: true,\r\n            isLoadingSimilar: true,\r\n            isLoadingRecommendations: true,\r\n            inCart: false,\r\n            isOwned: false,\r\n        }\r\n        this.handleAddToCart = this.handleAddToCart.bind(this)\r\n        this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\r\n        this.calculatePrice = this.calculatePrice.bind(this)\r\n    }\r\n    \r\n    // Do right after component mounts\r\n    componentDidMount() {\r\n        // Get slug for current movie\r\n        const slug = this.props.match.params.slug\r\n        // Get Movie ID from slug\r\n        const movieId = slug.substr(0, slug.indexOf('-'))\r\n        // Get movie data from movieId\r\n        this.loadMovie(movieId)\r\n    }\r\n\r\n    // Do if component receive new props (from links)\r\n    componentWillReceiveProps(newProps) {\r\n        // Get slug for current movie\r\n        const slug = newProps.match.params.slug\r\n        // Get Movie ID from slug\r\n        const movieId = slug.substr(0, slug.indexOf('-'))\r\n        if (this.state.movie.id !== parseInt(movieId)) {\r\n            console.log(this.state.movie.id)\r\n            console.log(parseInt(movieId))\r\n            this.setState({\r\n                isLoading: true,\r\n                isLoadingCast: true,\r\n                isLoadingSimilar: true,\r\n                isLoadingRecommendations: true,\r\n            })\r\n        }\r\n        // Get movie data from movieId\r\n        this.loadMovie(movieId)\r\n    }\r\n    \r\n    // Calculate price based on average vote\r\n    calculatePrice(rating) {\r\n        if (rating >= 8) {\r\n            return 21250\r\n        } else if (rating >= 6 && rating < 8){\r\n            return 16350\r\n        } else if (rating >= 3 && rating < 6){\r\n            return 8250\r\n         } else {\r\n            return 3500\r\n        }\r\n    }\r\n\r\n    // Asynchronous load movie information\r\n    async loadMovie(id) {\r\n        try {\r\n            // ie. https://api.themoviedb.org/3/movie/123456\r\n            const {data} = await APIConfig.get('/movie/' + id)\r\n            // Change state to movie's data\r\n            this.setState({\r\n                isLoading: false,\r\n                movie: data,\r\n                price: this.calculatePrice(data.vote_average),\r\n                inCart: this.props.cart.some(c => c.movie.id == id)? true : false,\r\n                isOwned: this.props.owned.some(m => m.id == id)? true : false,\r\n            })\r\n            // After the movie loads, load the credits (Casts)\r\n            this.loadCredits(id)\r\n            this.loadSimilar(id)\r\n            this.loadRecommendations(id)\r\n        } catch (error) {\r\n            alert(\"Terjadi kesalahan saat memuat film.\")\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Asynchronous load movie's credit information\r\n    async loadCredits(id) {\r\n        try {\r\n            // ie. https://api.themoviedb.org/3/movie/123456/credits\r\n            const {data} = await APIConfig.get('/movie/' + id + '/credits')\r\n            // Change casts state to data\r\n            this.setState({\r\n                isLoadingCast: false, \r\n                casts: data.cast\r\n            })\r\n        } catch (error) {\r\n            alert(\"Terjadi kesalahan saat memuat credit film.\")\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Asynchronous load movie's similar movies\r\n    async loadSimilar(id) {\r\n        try {\r\n            // ie. https://api.themoviedb.org/3/movie/123456/credits\r\n            const {data} = await APIConfig.get('/movie/' + id + '/similar')\r\n            // Change casts state to data\r\n            this.setState({\r\n                isLoadingSimilar: false, \r\n                similar: data.results\r\n            })\r\n        } catch (error) {\r\n            alert(\"Terjadi kesalahan saat memuat credit film.\")\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Asynchronous load movie's recommended movies\r\n    async loadRecommendations(id) {\r\n        try {\r\n            // ie. https://api.themoviedb.org/3/movie/123456/recommendations\r\n            const {data} = await APIConfig.get('/movie/' + id + '/recommendations')\r\n            // Change casts state to data\r\n            this.setState({\r\n                isLoadingRecommendations: false, \r\n                recommendations: data.results\r\n            })\r\n        } catch (error) {\r\n            alert(\"Terjadi kesalahan saat memuat credit film.\")\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Propagate to App's addToCart\r\n    // Change movie as in cart\r\n    handleAddToCart(e) {\r\n        this.props.addToCart(this.state.movie, this.state.price)\r\n        this.setState({inCart: true})\r\n    }\r\n\r\n    // Propagate to App's removeFromCart\r\n    // Change movie as not in cart\r\n    handleRemoveFromCart(e) {\r\n        this.props.removeFromCart(this.state.movie, this.state.price)\r\n        this.setState({inCart: false})\r\n    }\r\n\r\n    render() {\r\n        const movie = this.state.movie\r\n        const casts = this.state.casts\r\n        return (\r\n            <div className='row'>\r\n                <Helmet>\r\n                    <title>{movie.title + ' - StreamFlix Farizio'}</title>\r\n                </Helmet>\r\n                {/* Sticky info about movie */}\r\n                <div className='col-md-3 mb-5'>\r\n                    <div className={classes.poster}>\r\n                        {\r\n                            this.state.isLoading?\r\n                            <Loader className='mt-5'/>\r\n                            :\r\n                            <div>\r\n                                <img src = {'https://www.themoviedb.org/t/p/w600_and_h900_bestv2' + movie.poster_path} alt={movie.title} className='w-100'></img>\r\n                                <div className={MovieListClasses.movieDesc}>\r\n                                    <p className={MovieListClasses.title}>{movie.title}</p>\r\n                                    {\r\n                                        movie.release_date?\r\n                                        <p className={MovieListClasses.year}>{movie.release_date.substr(0,4)}</p>\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        this.state.movie.runtime>0 &&\r\n                                        <p className={MovieListClasses.year}>{movie.runtime + ' menit'}</p>\r\n                                    }\r\n                                    <p className={`${MovieListClasses.price} mt-2`}>\r\n                                        <CurrencyFormat \r\n                                            value={this.state.price} \r\n                                            displayType={'text'} \r\n                                            thousandSeparator={true} \r\n                                            prefix={'Rp'}/>\r\n                                    </p>\r\n                                    {\r\n                                        // If not owned, show button to add/remove to/from cart\r\n                                        !this.state.isOwned?\r\n                                        <Button \r\n                                            variant={this.state.inCart? 'red' : 'green'} \r\n                                            className='w-100 mt-3'\r\n                                            // If movie not in cart, provide button to add to cart and vice versa\r\n                                            onClick = {this.state.inCart? this.handleRemoveFromCart : this.handleAddToCart}>\r\n                                            {\r\n                                                this.state.inCart?\r\n                                                'Hapus dari Keranjang'\r\n                                                : \r\n                                                'Tambah ke Keranjang' \r\n                                            }\r\n                                        </Button>\r\n                                        : \r\n                                        // Fake button to watch the movie\r\n                                        <Button variant = 'blue' className='w-100 mt-3'>\r\n                                            Tonton\r\n                                        </Button>\r\n                                    }\r\n                                    <Rating>\r\n                                        {movie.vote_average}\r\n                                    </Rating>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* Movie Detail */}\r\n                <div className={classes.movieDetail + ' col'}>\r\n                    {\r\n                        this.state.isLoadingCast? \r\n                        <Loader>Memuat Pemeran</Loader>\r\n                        :\r\n                        <div>\r\n                            <h4>Sinopsis</h4>\r\n                            <p className={classes.year}>{movie.overview}</p>\r\n                            {\r\n                                this.state.casts.length>0 &&\r\n                                <div>\r\n                                    <h4>Pemeran</h4>\r\n                                    <div className='row'>\r\n                                        {\r\n                                            casts.map((cast, index) => (\r\n                                                <Cast key={index} name={cast.name} profile_path={cast.profile_path}></Cast>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.state.isLoadingSimilar? \r\n                        <Loader>Memuat Film Serupa</Loader>\r\n                        :\r\n                        this.state.similar.length>0 &&\r\n                        <MovieList\r\n                            addToCart = {this.props.addToCart}\r\n                            removeFromCart = {this.props.removeFromCart}\r\n                            movies = {this.state.similar}\r\n                            cart = {this.props.cart}\r\n                            owned = {this.props.owned}\r\n                        >Film Serupa</MovieList>\r\n                    }\r\n                    {\r\n                        this.state.isLoadingRecommendations? \r\n                        <Loader>Memuat Rekomendasi Film</Loader>\r\n                        :\r\n                        this.state.recommendations.length>0 &&\r\n                        <MovieList\r\n                            addToCart = {this.props.addToCart}\r\n                            removeFromCart = {this.props.removeFromCart}\r\n                            movies = {this.state.recommendations}\r\n                            cart = {this.props.cart}\r\n                            owned = {this.props.owned}\r\n                        >Rekomendasi Film</MovieList>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Project\\Flitts\\mini-project\\src\\component\\Backdrop\\index.js",["70"],"import React, { Component } from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nexport default class Backdrop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.backdrop} onClick = {this.props.onclick}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["71","72"],"D:\\Project\\Flitts\\mini-project\\src\\component\\Loader\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\Cast\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\container\\Cart\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\CartItem\\index.js",[],"D:\\Project\\Flitts\\mini-project\\src\\component\\Rating\\index.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":88,"column":62,"nodeType":"79","messageId":"80","endLine":88,"endColumn":64},{"ruleId":"77","severity":1,"message":"78","line":89,"column":58,"nodeType":"79","messageId":"80","endLine":89,"endColumn":60},{"ruleId":"81","severity":1,"message":"82","line":5,"column":5,"nodeType":"83","messageId":"84","endLine":7,"endColumn":6},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["87"],["88"],"no-global-assign","no-unsafe-negation"]